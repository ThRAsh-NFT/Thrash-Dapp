{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","input","len","useState","setLoading","useDispatch","useSelector","claimingNft","setClaimingNft","feedback","setFeedback","mintednftlink","setMintedNftLink","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","setTimeout","style","textAlign","backgroundColor","display","alignItems","justifyContent","width","height","color","size","padding","href","alt","src","borderRadius","border","boxShadow","fontSize","fontWeight","target","length","substring","onClick","e","window","open","margin","Number","preventDefault","abiResponse","abi","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed4d69ab.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport { ClimbingBoxLoader } from \"react-spinners\";// react spinners\nimport { SpinnerRoundOutlined } from 'spinners-react';// react spinners\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const [loading, setLoading] = useState(false);// for react spinners\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintednftlink, setMintedNftLink] = useState(``);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setMintedNftLink('');\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(`Congrats, the ${CONFIG.NFT_NAME} is yours! Go visit the link to view it.`);\n        setMintedNftLink(`https://testnets.opensea.io/${blockchain.account}`);\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 20) {\n      newMintAmount = 20;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    setLoading(true)\n    setTimeout(() => {\n      setLoading(false)\n    }, 8000) // react spinners\n  }, []);\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <div style={{textAlign: 'center',backgroundColor: \"black\", display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%', height: '100vh' }}>\n      {\n        loading ?\n          <ClimbingBoxLoader color ={'white'} loading={loading} size={23} /> // react spinners\n          :\n          <s.Screen >\n            <s.Container\n              flex={1}\n              ai={\"center\"}\n              style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n              image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n            >\n              <a href={CONFIG.MARKETPLACE_LINK}>\n                <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n              </a>\n              <s.SpacerSmall />\n              <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n                <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n                  <StyledImg alt={\"example\"} src={\"/config/images/1.gif\"} />\n                </s.Container>\n                <s.SpacerLarge />\n                <s.Container\n                  flex={2}\n                  jc={\"center\"}\n                  ai={\"center\"}\n                  style={{\n                    backgroundColor: \"var(--accent)\",\n                    padding: 24,\n                    borderRadius: 24,\n                    border: \"4px dashed var(--secondary)\",\n                    boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n                  }}\n                >\n                  <s.TextTitle\n                    style={{\n                      textAlign: \"center\",\n                      fontSize: 50,\n                      fontWeight: \"bold\",\n                      color: \"var(--accent-text)\",\n                    }}\n                  >\n                    {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n                  </s.TextTitle>\n                  <s.TextDescription\n                    style={{\n                      textAlign: \"center\",\n                      color: \"var(--primary-text)\",\n                    }}\n                  >\n                    <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                      {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n                    </StyledLink>\n                  </s.TextDescription>\n                  <span\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                  >\n                    <StyledButton\n                      onClick={(e) => {\n                        window.open(\"https://app.gitbook.com/o/5KSdFh1er9t1VlHA2Pks/s/0DwmWWUPvI57P0zN44dl/\", \"_blank\");\n                      }}\n                      style={{\n                        margin: \"5px\",\n                      }}\n                    >\n                      Gitbook\n                    </StyledButton>\n                    <StyledButton\n                      style={{\n                        margin: \"5px\",\n                      }}\n                      onClick={(e) => {\n                        window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\n                      }}\n                    >\n                      {CONFIG.MARKETPLACE}\n                    </StyledButton>\n                  </span>\n                  <s.SpacerSmall />\n                  {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                    <>\n                      <s.TextTitle\n                        style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                      >\n                        The sale has ended.\n                      </s.TextTitle>\n                      <s.TextDescription\n                        style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                      >\n                        You can still find {CONFIG.NFT_NAME} on\n                      </s.TextDescription>\n                      <s.SpacerSmall />\n                      <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                        {CONFIG.MARKETPLACE}\n                      </StyledLink>\n                    </>\n                  ) : (\n                    <>\n                      <s.TextTitle\n                        style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                      >\n                        1 {/*CONFIG.SYMBOL*/} ThRAsh Hoodie costs {CONFIG.DISPLAY_COST}{\" \"}\n                        {CONFIG.NETWORK.SYMBOL}.\n                      </s.TextTitle>\n                      <s.SpacerXSmall />\n                      <s.TextDescription\n                        style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                      >\n                        Excluding gas fees.\n                      </s.TextDescription>\n                      <s.SpacerSmall />\n                      {blockchain.account === \"\" ||\n                        blockchain.smartContract === null ? (\n                        <s.Container ai={\"center\"} jc={\"center\"}>\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"var(--accent-text)\",\n                            }}\n                          >\n                            Connect to the {CONFIG.NETWORK.NAME} network\n                          </s.TextDescription>\n                          <s.SpacerSmall />\n                          <StyledButton\n                            onClick={(e) => {\n                              e.preventDefault();\n                              dispatch(connect());\n                              getData();\n                            }}\n                          >\n                            CONNECT\n                          </StyledButton>\n                          {blockchain.errorMsg !== \"\" ? (\n                            <>\n                              <s.SpacerSmall />\n                              <s.TextDescription\n                                style={{\n                                  textAlign: \"center\",\n                                  color: \"var(--accent-text)\",\n                                }}\n                              >\n                                {blockchain.errorMsg}\n                              </s.TextDescription>\n                            </>\n                          ) : null}\n                        </s.Container>\n                      ) : (\n                        <>\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"var(--accent-text)\",\n                            }}\n                          >\n                            {feedback}\n                          </s.TextDescription>\n                          <a href={mintednftlink}>{mintednftlink}</a>\n                          <s.SpacerMedium />\n                          <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                            <StyledRoundButton\n                              style={{ lineHeight: 0.4 }}\n                              disabled={claimingNft ? 1 : 0}\n                              onClick={(e) => {\n                                e.preventDefault();\n                                decrementMintAmount();\n                              }}\n                            >\n                              -\n                            </StyledRoundButton>\n                            <s.SpacerMedium />\n                            <s.TextDescription\n                              style={{\n                                textAlign: \"center\",\n                                color: \"var(--accent-text)\",\n                              }}\n                            >\n                              {mintAmount}\n                            </s.TextDescription>\n                            <s.SpacerMedium />\n                            <StyledRoundButton\n                              disabled={claimingNft ? 1 : 0}\n                              onClick={(e) => {\n                                e.preventDefault();\n                                incrementMintAmount();\n                              }}\n                            >\n                              +\n                            </StyledRoundButton>\n                          </s.Container>\n                          <s.SpacerSmall />\n                          <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                            <StyledButton\n                              disabled={claimingNft ? 1 : 0}\n                              onClick={(e) => {\n                                e.preventDefault();\n                                claimNFTs();\n                                getData();\n                              }}\n                            >\n                              {claimingNft ? \"MINTING...\" : \"BUY\"}\n                            </StyledButton>\n                          </s.Container>\n                        </>\n                      )}\n                    </>\n                  )}\n                  <s.SpacerMedium />\n                </s.Container>\n                <s.SpacerLarge />\n                <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n                  <StyledImg\n                    alt={\"example\"}\n                    src={\"/config/images/5.gif\"}\n                    style={{ transform: \"scaleX(-1)\" }}\n                  />\n                </s.Container>\n              </ResponsiveWrapper>\n              <s.SpacerMedium />\n              <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--primary-text)\",\n                  }}\n                >\n                  Please make sure you are connected to the right network (\n                  {CONFIG.NETWORK.NAME}) and the correct address. Please note:\n                  Once you make the purchase, you cannot undo this action.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--primary-text)\",\n                  }}\n                >\n                  We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n                  successfully mint your NFT. We recommend that you don't lower the\n                  gas limit.\n                </s.TextDescription>\n              </s.Container>\n            </s.Container>\n\n          </s.Screen>\n          }\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}